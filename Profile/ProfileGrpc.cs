// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: profile.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Profile {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Profile
  {
    static readonly string __ServiceName = "profile.Profile";

    static readonly grpc::Marshaller<global::Profile.ProfileRequest> __Marshaller_ProfileRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Profile.ProfileRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Profile.ProfileResponse> __Marshaller_ProfileResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Profile.ProfileResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Profile.ProfileRequest, global::Profile.ProfileResponse> __Method_GetProfile = new grpc::Method<global::Profile.ProfileRequest, global::Profile.ProfileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProfile",
        __Marshaller_ProfileRequest,
        __Marshaller_ProfileResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Profile.ProfileReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Profile</summary>
    public abstract partial class ProfileBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Profile.ProfileResponse> GetProfile(global::Profile.ProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Profile</summary>
    public partial class ProfileClient : grpc::ClientBase<ProfileClient>
    {
      /// <summary>Creates a new client for Profile</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProfileClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Profile that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProfileClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProfileClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProfileClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Profile.ProfileResponse GetProfile(global::Profile.ProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Profile.ProfileResponse GetProfile(global::Profile.ProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProfile, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Profile.ProfileResponse> GetProfileAsync(global::Profile.ProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Profile.ProfileResponse> GetProfileAsync(global::Profile.ProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProfile, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProfileClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProfileClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProfileBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetProfile, serviceImpl.GetProfile).Build();
    }

  }
}
#endregion
